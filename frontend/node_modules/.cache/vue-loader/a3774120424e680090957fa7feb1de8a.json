{"remainingRequest":"/Users/cedric-bonvin/Documents/Monkey/site Monkey-school/monkey-school/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/cedric-bonvin/Documents/Monkey/site Monkey-school/monkey-school/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/cedric-bonvin/Documents/Monkey/site Monkey-school/monkey-school/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cedric-bonvin/Documents/Monkey/site Monkey-school/monkey-school/frontend/src/views/panier.vue?vue&type=template&id=8701719a&scoped=true&","dependencies":[{"path":"/Users/cedric-bonvin/Documents/Monkey/site Monkey-school/monkey-school/frontend/src/views/panier.vue","mtime":1636644132773},{"path":"/Users/cedric-bonvin/Documents/Monkey/site Monkey-school/monkey-school/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cedric-bonvin/Documents/Monkey/site Monkey-school/monkey-school/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/cedric-bonvin/Documents/Monkey/site Monkey-school/monkey-school/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cedric-bonvin/Documents/Monkey/site Monkey-school/monkey-school/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgImRpdiIsCiAgICBbCiAgICAgIF92bS5kaXNwbGF5TG9hZGVyID8gX2MoImxvYWRlciIpIDogX3ZtLl9lKCksCiAgICAgIF92bS5kaXNwbGF5TW9kYWwKICAgICAgICA/IF9jKCJtb2RhbCIsIHsKICAgICAgICAgICAgYXR0cnM6IHsgdGV4dDogX3ZtLm1vZGFsVGV4dCB9LAogICAgICAgICAgICBvbjogeyAiY2xvc2UtbW9kYWwiOiBfdm0uY2xvc2VNb2RhbCB9CiAgICAgICAgICB9KQogICAgICAgIDogX3ZtLl9lKCksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiYm9keSIgfSwgWwogICAgICAgIF9jKAogICAgICAgICAgInNlY3Rpb24iLAogICAgICAgICAgeyBzdGF0aWNDbGFzczogInNlY3Rpb25DYXJ0ZSIgfSwKICAgICAgICAgIFsKICAgICAgICAgICAgX2MoImgyIiwgeyBzdGF0aWNDbGFzczogInRpdGxlVm90cmVQYW5pZXIgdGl0bGVTZWN0aW9uIiB9LCBbCiAgICAgICAgICAgICAgX3ZtLl92KCJWb3RyZSBwYW5pZXIgOiIpCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfYygKICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICBfdm0uX2woX3ZtLnBhbmllciwgZnVuY3Rpb24oaXRlbSwgaW5kZXgpIHsKICAgICAgICAgICAgICAgIHJldHVybiBfYygiY2FydGUtcGFuaWVyIiwgewogICAgICAgICAgICAgICAgICBrZXk6IGl0ZW0uaWQsCiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGNvdXJzOiBfdm0ucGFuaWVyW2luZGV4XSwgcGFuaWVyOiBfdm0ucGFuaWVyIH0sCiAgICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgICAgc3VwcHJpbWVyQ2FydGU6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5kZWxldGVDYXJkKGluZGV4KQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAxCiAgICAgICAgICAgICksCiAgICAgICAgICAgIHRoaXMuJHN0b3JlLnN0YXRlLm5ickl0ZW1QYW5pZXIgPT09IDAKICAgICAgICAgICAgICA/IF9jKCJwYW5pZXItdmlkZSIpCiAgICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgImJ1dHRvbiIsCiAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogImJ1dHRvbkFqb3V0ZXIiIH0sCiAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgX2MoInJvdXRlci1saW5rIiwgeyBhdHRyczogeyB0bzogIi9jb3VycyIgfSB9LCBbCiAgICAgICAgICAgICAgICAgIF92bS5fdigiIEFKT1VURVIgVU4gQ09VUlMuLi4iKQogICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgIDEKICAgICAgICAgICAgKQogICAgICAgICAgXSwKICAgICAgICAgIDEKICAgICAgICApLAogICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiZnJhdGVyaWVQYWllbWVudCIgfSwgWwogICAgICAgICAgX3ZtLmRpc3BsYXlTZWN0aW9uRnJhdGVyaWUKICAgICAgICAgICAgPyBfYygic2VjdGlvbiIsIHsgc3RhdGljQ2xhc3M6ICIgc2VjdGlvbiBmcmF0ZXJpZSIgfSwgWwogICAgICAgICAgICAgICAgX2MoImgyIiwgeyBzdGF0aWNDbGFzczogInVuZGVyTGluZSIgfSwgWwogICAgICAgICAgICAgICAgICBfdm0uX3YoIlknYS10LWlsIHVuZSBmcmF0ZXJpZSA/IikKICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJib3hSYWRpbyIgfSwgWwogICAgICAgICAgICAgICAgICBfYygiZGl2IiwgWwogICAgICAgICAgICAgICAgICAgIF9jKCJpbnB1dCIsIHsKICAgICAgICAgICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICJtb2RlbCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgcmF3TmFtZTogInYtbW9kZWwiLAogICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0uaXNGcmF0ZXJpZSwKICAgICAgICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAiaXNGcmF0ZXJpZSIKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICJyYWRpbyIsCiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICJmcmF0ZXJpZSIsCiAgICAgICAgICAgICAgICAgICAgICAgIGlkOiAieWVzRnJhdGVyaWUiLAogICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogInRydWUiCiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgZG9tUHJvcHM6IHsgY2hlY2tlZDogX3ZtLl9xKF92bS5pc0ZyYXRlcmllLCAidHJ1ZSIpIH0sCiAgICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgICBjaGFuZ2U6IFsKICAgICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5pc0ZyYXRlcmllID0gInRydWUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0ueWVzRnJhdGVyaWUKICAgICAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAgIF9jKCJsYWJlbCIsIHsgYXR0cnM6IHsgZm9yOiAibm9GcmF0ZXJpZSIgfSB9LCBbCiAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIk9VSSIpCiAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgIF9jKCJkaXYiLCBbCiAgICAgICAgICAgICAgICAgICAgX2MoImlucHV0IiwgewogICAgICAgICAgICAgICAgICAgICAgZGlyZWN0aXZlczogWwogICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogIm1vZGVsIiwKICAgICAgICAgICAgICAgICAgICAgICAgICByYXdOYW1lOiAidi1tb2RlbCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS5pc0ZyYXRlcmllLAogICAgICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246ICJpc0ZyYXRlcmllIgogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogInJhZGlvIiwKICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogImZyYXRlcmllIiwKICAgICAgICAgICAgICAgICAgICAgICAgaWQ6ICJub0ZyYXRlcmllIiwKICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6ICJmYWxzZSIKICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICBkb21Qcm9wczogeyBjaGVja2VkOiBfdm0uX3EoX3ZtLmlzRnJhdGVyaWUsICJmYWxzZSIpIH0sCiAgICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgICBjaGFuZ2U6IFsKICAgICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5pc0ZyYXRlcmllID0gImZhbHNlIgogICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLm5vRnJhdGVyaWUKICAgICAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAgIF9jKCJsYWJlbCIsIHsgYXR0cnM6IHsgZm9yOiAibm9GcmF0ZXJpZSIgfSB9LCBbCiAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIk5PTiIpCiAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgX3ZtLmlzRnJhdGVyaWUgPT09ICJ0cnVlIgogICAgICAgICAgICAgICAgICA/IF9jKCJkaXYiLCBbCiAgICAgICAgICAgICAgICAgICAgICBfYygiaHIiKSwKICAgICAgICAgICAgICAgICAgICAgIF9jKCJoMyIsIHsgc3RhdGljQ2xhc3M6ICJ0aXRsZVNlbGVjdGlvbkZyYXRlcmllIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigiUXVpIGVzdCBkZSBsYSBtw6ptZSBGYW1pbGxlLi4uIikKICAgICAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAiYm94RnJhdGVyaWUiIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fbChfdm0ucGFuaWVyLCBmdW5jdGlvbihlbGV2ZSkgewogICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfYygiZGl2IiwgeyBrZXk6IGVsZXZlLmlkIH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsZXZlLmluZm9Db3Vycy50eXBlQ291cnMgPT09ICJyZWd1bGllciIgJiYKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsZXZlLmluZm9Db3Vycy5ub21Db3VycyAhPT0gIkJpZy1Nb25rZXkiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gX2MoImRpdiIsIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJpbnB1dCIsIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlyZWN0aXZlczogWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICJtb2RlbCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByYXdOYW1lOiAidi1tb2RlbCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLmZyYXRlcmllLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogImZyYXRlcmllIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAiY2hlY2tib3giLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICJpc0VsZXZlIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21Qcm9wczogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBlbGV2ZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGVja2VkOiBBcnJheS5pc0FycmF5KF92bS5mcmF0ZXJpZSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gX3ZtLl9pKF92bS5mcmF0ZXJpZSwgZWxldmUpID4gLTEKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogX3ZtLmZyYXRlcmllCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hhbmdlOiBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyICQkYSA9IF92bS5mcmF0ZXJpZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkJGVsID0gJGV2ZW50LnRhcmdldCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkJGMgPSAkJGVsLmNoZWNrZWQgPyB0cnVlIDogZmFsc2UKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoJCRhKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciAkJHYgPSBlbGV2ZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQkaSA9IF92bS5faSgkJGEsICQkdikKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJCRlbC5jaGVja2VkKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkJGkgPCAwICYmCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChfdm0uZnJhdGVyaWUgPSAkJGEuY29uY2F0KFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkJHYKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSkpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQkaSA+IC0xICYmCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChfdm0uZnJhdGVyaWUgPSAkJGEKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuc2xpY2UoMCwgJCRpKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5jb25jYXQoJCRhLnNsaWNlKCQkaSArIDEpKSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLmZyYXRlcmllID0gJCRjCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uY2hlY2tSYWJhaXNSZWd1bGllcgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygibGFiZWwiLCB7IGF0dHJzOiB7IGZvcjogIiIgfSB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiICIgKwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl9zKGVsZXZlLmVsZXZlLm5vbUVsZXZlKSArCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiICIgKwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl9zKGVsZXZlLmVsZXZlLnByZW5vbUVsZXZlKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCkKICAgICAgICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgICAgICAgMAogICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICAgICAgICBfdm0uZXJyb3Iuc2VsZWN0RnJhdGVyaWUKICAgICAgICAgICAgICAgICAgPyBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImVycm9yIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS5lcnJvci5zZWxlY3RGcmF0ZXJpZSkpCiAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKQogICAgICAgICAgICAgIF0pCiAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICBfdm0uZGlzcGxheVBhaW1lbnQKICAgICAgICAgICAgPyBfYygic2VjdGlvbiIsIHsgc3RhdGljQ2xhc3M6ICJzZWN0aW9uUGFpZW1lbnQgIiB9LCBbCiAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImJveFRvdGFsUHJpeCIgfSwgWwogICAgICAgICAgICAgICAgICBfYygicCIsIHsgc3RhdGljQ2xhc3M6ICJ0aXRsZVByaXhUb3RhbCIgfSwgWwogICAgICAgICAgICAgICAgICAgIF92bS5fdigiVE9UQUwgOiAiKQogICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgX3ZtLl9tKDApLAogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAiYm94Qm9keVRvdGFsIiB9LAogICAgICAgICAgICAgICAgICAgIF92bS5fbChfdm0ucGFuaWVyLCBmdW5jdGlvbihjb3VycykgewogICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgICAgICAgICAgeyBrZXk6IGNvdXJzLmlkLCBzdGF0aWNDbGFzczogImJvZHlUb3RhbCIgfSwKICAgICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY29sUGFpbWVudCIgfSwgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoInAiLCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigiICIgKyBfdm0uX3MoY291cnMuZWxldmUubm9tRWxldmUpICsgIiAiKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygicCIsIFtfdm0uX3YoX3ZtLl9zKGNvdXJzLmVsZXZlLnByZW5vbUVsZXZlKSldKQogICAgICAgICAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICAgICAgICAgICFjb3Vycy5pbmZvQ291cnMucmFiYWlzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IF9jKCJwIiwgeyBzdGF0aWNDbGFzczogImNvbFBhaW1lbnQgY29sUmFiYWlzIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCItLSIpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpLAogICAgICAgICAgICAgICAgICAgICAgICAgIGNvdXJzLmluZm9Db3Vycy5yYWJhaXMKICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gX2MoInAiLCB7IHN0YXRpY0NsYXNzOiAiY29sUGFpbWVudCBjb2xSYWJhaXMiIH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoX3ZtLl9zKGNvdXJzLmluZm9Db3Vycy5yYWJhaXMpICsgIiAlIikKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICAgICAgICAgICAgICAgICAgY291cnMuaW5mb0NvdXJzLnR5cGVDb3VycyAhPT0gIk5vZWwiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IF9jKCJwIiwgeyBzdGF0aWNDbGFzczogImNvbFBhaW1lbnQgY29sUHJpeCIgfSwgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICIgQ0hGICIgKwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3MoY291cnMuaW5mb0NvdXJzLnByaXhBUGF5ZSkgKwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiIC4tICIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpLAogICAgICAgICAgICAgICAgICAgICAgICAgIGNvdXJzLmluZm9Db3Vycy50eXBlQ291cnMgPT09ICJOb2VsIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBfYygicCIsIHsgc3RhdGljQ2xhc3M6ICJjb2xQYWltZW50IGNvbFByaXgiIH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiIENIRiAiICsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl9zKGNvdXJzLmluZm9Db3Vycy5wcml4QVBheWUpICsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIiAuLSAiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKQogICAgICAgICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgICAgMAogICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImJveFByaXhUb3RhbCIgfSwgWwogICAgICAgICAgICAgICAgICAgIF9jKCJkaXYiLCBbX3ZtLl92KCJQcml4IFRvdGFsIDoiKV0pLAogICAgICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAicHJpeFRvdGFsIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIkNIRi4gIiArIF92bS5fcyhfdm0ucHJpeFRvdGFsKSArICIgLi0iKQogICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAiYnV0dG9uIiwKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImJ1dHRvblBhaW1lbnQiLAogICAgICAgICAgICAgICAgICAgICAgb246IHsgY2xpY2s6IF92bS5wYWllbWVudCB9CiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCJJTlNDUklQVElPTiIpXQogICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICBfYygicCIsIHsgc3RhdGljQ2xhc3M6ICJhY2NlcHRlIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCJOT1VTIEFDQ0VQVE9OUyA6IikKICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJjYXJ0ZUJhbnF1YWlyZSIsCiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgIHNyYzogcmVxdWlyZSgiQC9hc3NldHMvaW1hZ2VzL3Zpc2EuanBlZyIpLAogICAgICAgICAgICAgICAgICAgICAgYWx0OiAiY2FydGUgVmlzYSIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiY2FydGVCYW5xdWFpcmUiLAogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICBzcmM6IHJlcXVpcmUoIkAvYXNzZXRzL2ltYWdlcy9tYXN0ZXItY2FyZC5wbmciKSwKICAgICAgICAgICAgICAgICAgICAgIGFsdDogIiBsb2dvIG1hc3RlciBjYXJkIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgOiBfdm0uX2UoKQogICAgICAgIF0pCiAgICAgIF0pCiAgICBdLAogICAgMQogICkKfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gWwogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJ0aXRsZUJvZHlUb3RhbCIgfSwgWwogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImhlYWRlclRvdGFsIGNvbFBhaW1lbnQiIH0sIFtfdm0uX3YoIkVsw6h2ZSA6IildKSwKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJoZWFkZXJUb3RhbCBjb2xSYWJhaXMiIH0sIFtfdm0uX3YoIlJhYmFpcyA6IildKSwKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJoZWFkZXJUb3RhbCBjb2xQcml4IiB9LCBbX3ZtLl92KCJQcml4IDoiKV0pCiAgICBdKQogIH0KXQpyZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWUKCmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0="}]}