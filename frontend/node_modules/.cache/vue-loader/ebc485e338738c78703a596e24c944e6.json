{"remainingRequest":"/Users/cedric-bonvin/Documents/alloMonkey/monkey-school/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/cedric-bonvin/Documents/alloMonkey/monkey-school/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/cedric-bonvin/Documents/alloMonkey/monkey-school/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cedric-bonvin/Documents/alloMonkey/monkey-school/frontend/src/views/panier.vue?vue&type=template&id=8701719a&scoped=true&","dependencies":[{"path":"/Users/cedric-bonvin/Documents/alloMonkey/monkey-school/frontend/src/views/panier.vue","mtime":1635718095397},{"path":"/Users/cedric-bonvin/Documents/alloMonkey/monkey-school/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cedric-bonvin/Documents/alloMonkey/monkey-school/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/cedric-bonvin/Documents/alloMonkey/monkey-school/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cedric-bonvin/Documents/alloMonkey/monkey-school/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}